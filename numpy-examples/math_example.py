import numpy as np

# 卷积运算
print("----------------------------卷积运算---------------------------")
print(np.convolve([1, 2, 3], [0, 1, 0.5]))

# 随机数运算
print("----------------------------随机数运算---------------------------")
i = 0
while i < 6:
    if i < 3:
        np.random.seed(0)
        # 种子一样，生成的随机数也是一样的
        print(np.random.randn(1, 5))
    else:
        print(np.random.randn(1, 5))
        pass
    i += 1
print("------从上面6次可以看出seed的影响-------")
i = 0
while i < 2:
    print(np.random.randn(1, 5))
    i += 1
print("----跳出原来的循环，看看新的循环里有没有不同，下面想比较个8次循环的随机内容，因为前面有三个循环是一样的，所以再补充两组随机值，凑够8个----")
print(np.random.randn(2, 5))
np.random.seed(0)
i = 0
print("----新的8次循环，和之前的8次循环进行比较-----")
while i < 8:
    print(np.random.randn(1, 5))
    i += 1
print("---可以看到，在种子一样的情况下，前后两次8个依次随机生成的数是一样的---")
# 以上结果说明，随机数种子对后面的结果一直有影响。同时，加了随机数种子以后，后面的随机数组都是按一定的顺序生成的

print("============================================================")
print("---------接下来换一个种子，看一看随机生成的数据是否一样----------")
i = 0
np.random.seed(0)
while i < 3:
    print(np.random.randn(1, 5))
    i += 1
i = 0
np.random.seed(1)
i = 0
while i < 3:
    print(np.random.randn(1, 5))
    i += 1
print("----当种子一样时，不论什么时候生成的随机数都是一样的，当种子不一样时，生成的随机数自然就不同了----")
# 不论在哪台电脑上，当随机数种子参数为0和1时，生成的随机数相同。说明该参数指定了一个随机数生成的起始位置。每个参数对应一个位置。并且在该参数确定后，其后面的随机数的生成顺序也就确定了。
# 所以随机数种子的参数怎么选择？我认为随意，这个参数只是确定一下随机数的起始位置。
